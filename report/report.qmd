---
title: "Avaliação do Nível de Informações Disponibilizadas nos Portais dos Departamentos Estaduais de Trânsito – DETRANs"
format: 
  onsvpub-html:
    smooth-scroll: true
editor: source
author: 
  - name: João Pedro Melani Saraiva
    affiliation:
    - id: onsv
      name: Observatório Nacional de Segurança Viária
  - name: Daniel Duque
    affiliation: Centro de Liderança Pública
  - name: Pedro Augusto Borges dos Santos
    affiliation: 
      - ref: onsv   
date: last-modified
title-block-banner: true
editor_options: 
  chunk_output_type: console
bibliography: references.bib
csl: associacao-brasileira-de-normas-tecnicas.csl
---

```{r}
#| include: false

library(tidyverse)
library(here)
library(leaflet)
library(flextable)
library(onsvplot)
library(scales)
library(geobr)
library(sf)
library(reactable)
library(gt)
library(plotly)
library(leafsync)
library(ggiraph)
source(here("R", "02-utils.R"))

estados <- read_state()
load(here("data", "revisoes.rda"))

font_families <- "-apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial, sans-serif"

tbl_red <- "#D7191C"
tbl_orange <- "#f05f22"
tbl_yellow <- "#f7951d"
tbl_green <- "#1fa149"
pal <- c(tbl_red, tbl_orange, tbl_yellow, tbl_green)
col_func <- function(x) rgb(colorRamp(c(pal))(x), maxColorValue = 255)

binned_pal <-
  colorBin(
    palette = pal,
    domain = seq(0, 10, 0.5),
    bins = c(0, 2.5, 5, 7.5, 10)
  )
```

### Sobre o relatório {.unnumbered}

#### Como citar {.unnumbered}

ONSV; CLP e UFPR (2024). Avaliação do Nível de Informações Disponibilizadas nos Portais dos Departamentos Estaduais de Trânsito -- DETRANs. Observatório Nacional de Segurança Viária, Centro de Liderança Pública e Universidade Federal do Paraná. Disponível em: \_\_\_\_ .

#### Licença de uso {.unnumbered}

Avaliação do Nível de Informações Disponibilizadas nos Portais dos Departamentos Estaduais de Trânsito -- DETRANs © 2024 por Observatório Nacional de Segurança Viária está licenciada sob CC BY-NC 4.0. Para ver uma cópia desta licença, acesse <https://creativecommons.org/licenses/by-nc/4.0/> .

#### Código livre e aberto {.unnumbered}

Todo o processo metodológico de coleta, transformação e visualização dos dados presentes nesse relatório estão disponíveis no repositório <https://github.com/ONSV/revisao-detrans> .

## Introdução

### Objetivo

O presente documento tem por objetivo apresentar uma avaliação do nível de informações disponibilizadas nos portais (sítios eletrônicos) dos DETRANs (Departamentos Estaduais de Trânsito) de todas as unidades da federação brasileiras.

Os DETRANs, por sua atuação, trabalham com um grande número de informações relevantes para a gestão do trânsito no país, tendo muitas delas, além do teor formal e burocrático, uma grande utilidade para avaliações no âmbito da segurança viária, tais como: infrações de trânsito, sinistros de trânsito, e habilitação, entre outros.

Nesse sentido, este documento busca apresentar uma análise da situação de cada DETRAN, permitindo obter um panorama de como essas instituições trabalham e disponibilizam informações de interesse social. Além da introdução, o documento compõe-se das seguintes seções: @sec-metodos, com as consultas preliminares, pontuação e critérios estabelecidos; e @sec-resultados, com a pontuação geral em cada categoria analisada, com a evolução das notas resultantes ao longo dos anos e com os exemplos de boas práticas encontradas nos sítios eletrônicos.

### Atribuições do DETRAN

De acordo com o CTB (Código de Trânsito Brasileiro), são competências do DETRAN o planejamento, coordenação, execução e controle relacionados às seguintes áreas: habilitação de condutores, veículos, fiscalização de trânsito, estatísticas e educação para o trânsito.

Na habilitação de condutores, cabe ao DETRAN realizar e controlar o processo de formação, reciclagem e suspensão dos condutores, assim como a expedição e cassação da Licença de Aprendizagem, Permissão para Dirigir e CNH.

Em relação aos veículos, compete ao DETRAN o seu registro, emplacamento, licenciamento e a expedição do seu Certificado de Registro e Licenciamento Anual.

Na área de fiscalização, o DETRAN deve fazer cumprir a legislação e as normas de trânsito, sendo responsável pela autuação e aplicação de medidas administrativas cabíveis pelas infrações previstas no Código de Trânsito Brasileiro.

Em relação a educação para o trânsito, é responsabilidade do DETRAN a promoção e participação de projetos de educação e segurança no trânsito. Por fim, coleta de dados estatísticos e a elaboração de estudos sobre acidentes de trânsito e suas causas também devem ser cumpridos pelo DETRAN.

### Versão anterior

Este trabalho é uma segunda versão do relatório publicado em 2020 pelo Observatório Nacional de Segurança Viária, que virou uma comunicação técnica publicada no segundo Simpósio de Transportes do Paraná (STPR), também em 2020 [@santos2020]. A elaboração de uma nova versão ira possibilitar a evolução dos portais dos DETRANs de cada estado.

## Métodos {#sec-metodos}

### Consultas Preliminares

O estudo foi realizado por meio do acesso dos *sites* dos DETRANs de cada estado brasileiro a fim de averiguar a existência de dados estatíticos sobre a frota veicular, condutores habilitados, infrações e sinistros de trânsito. Também foram avaliados a existência de informações relacionadas à educação para o trânsito (campanhas, material educativo, regras de trânsito, etc.), dados quantitivos do atendimento ao público pelo departamento, disponibilidade de canais de atendimento e dados informativos sobre os centros de formação de condutores do estado em questão. A @tbl-consultas demonstra os resultados de uma consulta preliminar destes portais:

```{r}
#| include: false

consulta_pre <- df_revisoes |>
  mutate(regiao = get_region(uf), .before = 1) |>
  filter(ano == 2024) |>
  mutate(
    frota = rowMeans(across(starts_with("frota"))),
    condutores = rowMeans(across(starts_with("condutores"))),
    infracoes = rowMeans(across(starts_with("infracoes"))),
    sinistros = rowMeans(across(starts_with("sinistros"))),
    atendimento = rowMeans(across(starts_with("atendimento"))),
    educ = rowMeans(across(starts_with("educ"))),
    cfcs
  ) |>
  select(regiao,
         uf,
         frota,
         condutores,
         infracoes,
         sinistros,
         atendimento,
         educ,
         cfcs)
```

<!-- ```{r} -->

<!-- #| tbl-cap: Consultas preliminares -->

<!-- #| label: tbl-consultas -->

<!-- consulta_pre |> -->

<!--   mutate(across(where(is.numeric), ~ ifelse(.x == 0, "NÃO", "SIM"))) |> -->

<!--   arrange(desc(regiao)) |> -->

<!--   flextable() |> -->

<!--   merge_v(j = ~ regiao) |> -->

<!--   set_header_labels( -->

<!--     regiao = "Região", -->

<!--     uf = "UF", -->

<!--     frota = "Frota veicular", -->

<!--     condutores = "Condutores habilitados", -->

<!--     infracoes = "Infrações", -->

<!--     sinistros = "Sinistros", -->

<!--     atendimento = "Atendimento ao público", -->

<!--     educ = "Educação para o trânsito", -->

<!--     cfcs = "CFC" -->

<!--   ) |> -->

<!--   bg( -->

<!--     j = ~ . - regiao - uf, -->

<!--     bg = col_factor( -->

<!--       palette = c(pal[1], pal[4]), -->

<!--       domain = c("SIM", "NÃO") -->

<!--     ), -->

<!--     part = "body" -->

<!--   ) |> -->

<!--   color(j = ~ . - regiao - uf, -->

<!--         color = "white", -->

<!--         part = "body") |> -->

<!--   theme_vanilla() |> -->

<!--   surround( -->

<!--     j = ~ . - regiao - uf, -->

<!--     border.top = officer::fp_border(color = "grey90"), -->

<!--     border.bottom = officer::fp_border(color = "grey90"), -->

<!--   ) |> -->

<!--   align(align = "center", part = "all") |>  -->

<!--   fontsize(size = 9, part = "all") |>  -->

<!--   line_spacing(space = 0.55, part = "body") |>  -->

<!--   line_spacing(space = 0.6, part = "header") |>  -->

<!--   color(color = "white", part = "header") |>  -->

<!--   bg(bg = onsv_palette$blue, part = "header") -->

<!-- ``` -->

```{r}
#| label: tbl-consultas

consulta_pre |>
  mutate(across(where(is.numeric), ~ ifelse(.x == 0, "NÃO", "SIM"))) |>
  arrange(desc(regiao)) |>
  rename(
    `Região` = regiao,
    UF = uf,
    `Infrações` = infracoes,
    `Educação` = educ,
  ) |> 
  rename_with(.fn = ~ str_to_title(.)) |> 
  make_reactable(columns = list(
    Frota = colDef(style = binary_bg_func),
    Condutores = colDef(style = binary_bg_func),
    `Infrações` = colDef(style = binary_bg_func),
    Sinistros = colDef(style = binary_bg_func),
    Atendimento = colDef(style = binary_bg_func),
    `Educação` = colDef(style = binary_bg_func),
    Cfcs = colDef(style = binary_bg_func)
  ))
```

<!-- ```{r} -->

<!-- consulta_pre |> -->

<!--   mutate(across(where(is.numeric), ~ ifelse(.x == 0, "NÃO", "SIM"))) |> -->

<!--   arrange(desc(regiao)) |> -->

<!--   gt() |> -->

<!--   cols_align("center") |>  -->

<!--   cols_label_with(fn = ~ str_to_title(.)) |>  -->

<!--   cols_label( -->

<!--     regiao = "Região", -->

<!--     uf = "Estado", -->

<!--     infracoes = "Infrações", -->

<!--     educ = "Educação", -->

<!--     cfcs = "CFCs" -->

<!--   ) |>  -->

<!--   opt_table_font(font = font_families) |>  -->

<!--   tab_options(table.font.size = 9) |>  -->

<!--   opt_interactive( -->

<!--     use_pagination = F, -->

<!--     use_pagination_info = F, -->

<!--     use_compact_mode = T, -->

<!--     use_highlight = T, -->

<!--     use_resizers = T, -->

<!--     use_text_wrapping = F, -->

<!--     use_search = T -->

<!--   ) -->

<!-- ``` -->

### Critérios de Avaliação

A partir das categorias anteriormente discutidas, critérios de avaliação foram estabelecidos para quantificar a disponibilidade de dados e informações de cada um dos DETRANs. Assim sendo, são concedidos níveis de desempenho que equivalem a pontuações para cada um dos critérios aferidos:

1.  **Melhor Prática** - Nota 10;

2.  **Prática Intermediária** - Nota 6,7;

3.  **Prática Inicial** - Nota 3,3 e;

4.  **Prática Ausente** - Nota 0.

A avaliação dos dados estatísticos da **frota veicular**, **condutores habilitados**, **infrações** e **sinistros** de trânsito se baseou nos critérios de periodicidade (quantidade de anos disponíveis), interatividade (tipo de arquivos ou informações disponíveis) e nível de desagregação (quantidade de variáveis disponíveis para análise).

A **periodicidade** foi avaliada em:

-   Melhor: Quando há um máximo de 2 anos de atraso em relação ao ano atual para o dado mais recente e mais de 5 anos de dados disponíves;

-   Intermediária: Máximo de 2 anos de atraso ou menos de 5 anos disponíveis e;

-   Inicial: 3+ anos de atraso e menos de 5 anos disponíveis.

Neste contexto, para um estado ser situado como *Melhor*, por exemplo, seria necessário ter mais de 5 anos disponíveis e seu dado mais recente ser de, no mínino, 2022.

A **interatividade** foi avaliada em:

-   Melhor: Possui dados disponibilizados em relatórios interativos ou *dashboards* para consultas dinâmicas;

-   Intermediária: Dados disponibilizados em arquivos de planinhas (como `.xls`, `.xlsx` e `.ods`) de editores como Microsoft Excel, Google Sheets e LibreOffice Calc, e;

-   Inicial: Dados disponibilizados apenas como texto na página ou arquivos de texto (`.txt`, `.csv`, etc.).

O **nível de desagregação** foi avaliado em:

-   Melhor: Quantidade grande de variáveis;

-   Intermediário: Quantidade média de variáveis e;

-   Inicial: Quantidade baixa de variáveis.

A relação destes critérios está ilustrada na @tbl-criterios:

<!-- Falta explicar melhor esses critérios: o que significa 3 anos ou 2 anos de atraso? o que é txt? xlsx? sempre explicar tudo no texto -->

```{r}
#| tbl-cap: Critérios de avaliação para frota, condutores habilitados, infrações e sinistros
#| label: tbl-criterios

criterio <- data.frame(
  notas = c(3.3, 6.7, 10),
  periodicidade = c(
    "3+ anos de atraso e < 5 anos",
    "2 anos de atraso ou < 5 anos",
    "2 anos de atraso e > 5 anos"
  ),
  interatividade = c("Texto", "Planilha", "Interativo"),
  desagreg = c("1 a 2 desagregações", "3 a 4 desagregações", "5+ desagregações")
)

rbind(
  mutate(criterio, categoria = "frota"),
  mutate(criterio, categoria = "condutores"),
  mutate(
    criterio,
    categoria = "infrações",
    desagreg = c("1 desagregação", "2 desagregações", "3+ desagregações")
  ),
  mutate(
    criterio,
    categoria = "sinistros",
    desagreg = c("1 a 5 desagregações", "6 a 10 desagregações", "11+ desagregações")
  )
) |>
  relocate(categoria, periodicidade, interatividade, desagreg, notas) |>
  mutate(categoria = str_to_title(categoria)) |>
  rename_with(str_to_title) |>
  rename(`Nível de desagregação` = Desagreg) |>
  flextable() |>
  merge_v(j = ~ Categoria) |>
  theme_vanilla() |>
  align(align = "center", part = "all") |>
  autofit() |>
  color(color = "white", part = "header") |>
  bg(bg = onsv_palette$blue, part = "header") |> 
  colformat_double(decimal.mark = ",")
```

As informações sobre o **atendimento ao público**, **educação para o trânsito** e **CFCs** foram aferidas com outros critérios mais específicos por não se tratarem de dados estritamente estatísticos, exigindo uma mudança na abordagem de avaliação. As Tabelas [-@tbl-cri-atend], [-@tbl-cri-educ] e [-@tbl-cri-cfcs] demonstram os critérios para cada um destes casos:

<!-- O que é "atendimento por (1) e e-mail?" Explicar melhor essa tabela tambem -->

```{r}
#| tbl-cap: Critérios de avaliação para atendimento ao público
#| label: tbl-cri-atend

tbl_atend <- data.frame(
  notas = c(3.3, 6.7, 10),
  stats =  c(
    "3+ anos de atraso e < 5 anos",
    "2 anos de atraso ou < 5 anos",
    "2 anos de atraso e > 5 anos"
  ),
  canais = c(
    "Atendimento por telefone",
    "Atendimento por telefone e e-mail",
    "Atendimento por telefone, e-mail e mensagem"
  )
) |>
  relocate(stats, canais, notas) |>
  flextable() |>
  theme_vanilla() |>
  color(color = "white", part = "header") |>
  bg(bg = onsv_palette$blue, part = "header") |>
  set_header_labels(stats = "Estatísticas",
                    canais = "Canais de atendimento",
                    notas = "Notas") |>
  align(align = "center", part = "all") |> 
  autofit(add_w = 2) |> 
  colformat_double(decimal.mark = ",")

tbl_atend
```

```{r}
#| tbl-cap: Critérios de avaliação para conteúdo educativo
#| label: tbl-cri-educ

tbl_educ <- data.frame(
  conteudo = c(
    "Dicas, sugestões de leitura, cartilhas, orientações gerais e cadernos pedagógicos."
  ),
  divulgacao = c("Cursos, palestras, ações, projetos e campanhas.")
) |>
  flextable() |>
  theme_vanilla() |>
  color(color = "white", part = "header") |>
  bg(bg = onsv_palette$blue, part = "header") |>
  set_header_labels(conteudo = "Conteúdos didáticos",
                    divulgacao = "Divulgação de atividades") |>
  align(align = "center", part = "all") |> 
  autofit()

tbl_educ
```

```{r}
#| tbl-cap: Critérios de avaliação para informações sobre CFCs
#| label: tbl-cri-cfcs

tbl_cfc <- data.frame(
  lista = c(
    "Quantidade de CFCs no estado",
    "Lista completa dos CFCs",
    "Informações adicionais sobre o índice de aprovação dos alunos, quais CFCs possuem simuladores de direção, número de habilitados e informações sobre o credenciamento."
  ),
  notas = c(3.3, 6.7, 10)
) |>
  flextable() |>
  theme_vanilla() |>
  color(color = "white", part = "header") |>
  bg(bg = onsv_palette$blue, part = "header") |>
  set_header_labels(lista = "Lista sobre CFCs credenciados",
                    notas = "Notas") |>
  align(align = "center", part = "all") |> 
  autofit() |> 
  colformat_double(decimal.mark = ",")

tbl_cfc
```

## Resultados {#sec-resultados}

### Frota de Veículos

```{r}
frota <- df_revisoes |>
  filter(ano == 2024) |>
  select(uf, starts_with("frota")) |>
  mutate(regiao = get_region(uf), .before = 1) |>
  mutate(nota_final = round(rowMeans(across(
    starts_with("frota")
  )), 2)) |>
  arrange(desc(regiao))
```

Primeiramente, os dados de frota de veículos, condutores habilitados, infrações e sinistros são analisados conforme os três critérios de avaliação anteriormente vistos na @tbl-criterios. No caso da frota, o nível de desagregação considera as variáveis de ano de fabricação do veículo, categoria (particular, aluguel, etc.), combustível, espécie (passageiro, carga, etc.), procedência (nacional ou estrangeira) e tipo de veículo.

A @tbl-frota aponta a qualidade dos dados estatísticos da frota veicular como fornecidos pelos portais dos DETRANs, assim como a nota média para estes critérios. A periodicidade aparenta ser o critério de melhor performance na maior parte dos departamentos para esta categoria.

<!-- ```{r} -->

<!-- #| tbl-cap: Resultados da categoria "Frota de Veículos" -->

<!-- #| label: tbl-frota -->

<!-- frota |> -->

<!--   mutate(across( -->

<!--     starts_with("frota"), -->

<!--     ~ case_match( -->

<!--       .x, -->

<!--       10.0 ~ "Melhor", -->

<!--       6.7 ~ "Intermediário", -->

<!--       3.3 ~ "Inicial", -->

<!--       0 ~ "Ausente" -->

<!--     ) -->

<!--   )) |> -->

<!--   flextable() |> -->

<!--   merge_v(j = ~ regiao) |> -->

<!--   set_header_labels( -->

<!--     regiao = "Região", -->

<!--     uf = "UF", -->

<!--     frota_period = "Periodicidade", -->

<!--     frota_inter = "Interatividade", -->

<!--     frota_desagreg = "Nível de desagregação", -->

<!--     nota_final = "Nota Média" -->

<!--   ) |> -->

<!--   theme_vanilla() |> -->

<!--   align(align = "center", part = "all") |> -->

<!--   color(color = "white", part = "header") |> -->

<!--   color(j = ~ . - regiao - uf, -->

<!--         color = "white", -->

<!--         part = "body") |> -->

<!--   bg(bg = onsv_palette$blue, part = "header") |> -->

<!--   bg( -->

<!--     bg = col_numeric( -->

<!--       palette = pal, -->

<!--       domain = c(0, 10) -->

<!--     ), -->

<!--     part = "body", -->

<!--     j = ~ nota_final -->

<!--   ) |> -->

<!--   bg( -->

<!--     bg = col_factor( -->

<!--       palette = pal, -->

<!--       domain = c("Melhor", "Intermediário", "Inicial", "Ausente") -->

<!--     ), -->

<!--     part = "body", -->

<!--     j = ~ . - uf - regiao - nota_final -->

<!--   ) |> -->

<!--   bold(part = "body", j = ~ . - regiao - uf) |> -->

<!--   surround( -->

<!--     j = ~ . - regiao - uf, -->

<!--     border.top = officer::fp_border(color = "grey90"), -->

<!--     border.bottom = officer::fp_border(color = "grey90"), -->

<!--   ) |> -->

<!--   line_spacing(space = 0.4, part = "body") |> -->

<!--   line_spacing(space = 0.6, part = "header") |> -->

<!--   autofit() |> -->

<!--   colformat_double(decimal.mark = ",") -->

<!-- ``` -->

::: panel-tabset
### Tabela

```{r}
#| label: tbl-frota
#| tbl-cap: Resultados da categoria "Frota de Veículos"

frota |>
  mutate(across(
    starts_with("frota"),
    ~ case_match(
      .x,
      10.0 ~ "Melhor",
      6.7 ~ "Intermediário",
      3.3 ~ "Inicial",
      0 ~ "Ausente"
    )
  )) |>
  rename(
    `Região` = regiao,
    UF = uf,
    Periodicidade = frota_period,
    Interatividade = frota_inter,
    `Nível de desagregação` = frota_desagreg,
    `Nota Média` = nota_final
  ) |>
  make_reactable(
    columns = list(
      `Nota Média` = colDef(
        style = continuous_bg_func,
        format = colFormat(locales = "de-DE", digits = 1)
      ),
      Periodicidade = colDef(style = quali_bg_func),
      Interatividade = colDef(style = quali_bg_func),
      `Nível de desagregação` = colDef(style = quali_bg_func)
    )
  )
```

### Mapa

```{r}
#| fig-cap: Resultados da categoria "Frota de Veículos"
#| label: fig-map-frota

frota_map <- 
  frota |> 
  map_preproc()

frota_map |>
  make_leaflet()
```
:::

### Condutores Habilitados

```{r}
condutores <- df_revisoes |>
  filter(ano == 2024) |>
  select(uf, starts_with("condutores")) |>
  mutate(regiao = get_region(uf), .before = 1) |>
  mutate(nota_final = round(rowMeans(across(
    starts_with("condutores")
  )), 2)) |>
  arrange(desc(regiao))
```

A @tbl-condutores mostra o desempenho dos DETRANs na disponibilização de dados de condutores habilitados, visto que neste caso as variáveis de desagregação compreendem a categoria da habilitação, sexo, opção de doador, situação (provisória ou definitiva), idade do condutor e tempo de habilitação. Novamente, a periodicidade e a interatividade são os critérios com maior e menor performance geral respectivamente.

::: panel-tabset
### Tabela

```{r}
#| label: tbl-condutores
#| tbl-cap: Resultados da categoria "Condutores Habilitados"

condutores |>
  mutate(across(
    starts_with("condutores"),
    ~ case_match(
      .x,
      10.0 ~ "Melhor",
      6.7 ~ "Intermediário",
      3.3 ~ "Inicial",
      0 ~ "Ausente"
    )
  )) |> 
  rename(
    `Região` = regiao,
    UF = uf,
    Periodicidade = condutores_period,
    Interatividade = condutores_inter,
    `Nível de desagregação` = condutores_desagreg,
    `Nota Média` = nota_final
  ) |> 
  make_reactable(
    columns = list(
      `Nota Média` = colDef(
        style = continuous_bg_func,
        format = colFormat(locales = "de-DE", digits = 1)
      ),
      Periodicidade = colDef(style = quali_bg_func),
      Interatividade = colDef(style = quali_bg_func),
      `Nível de desagregação` = colDef(style = quali_bg_func)
    )
  )
```

### Mapa

```{r}
#| fig-cap: Resultados da categoria "Condutores Habilitados"
#| label: fig-map-condutores

condutores_map <- 
  condutores |> 
  map_preproc()

condutores_map |> 
  make_leaflet()
```
:::

<!-- O mapa de notas atribuídas demonstrado na @fig-map-condutores permite observar a distribuição de informações de condutores habilitados de cada estado. -->

### CFCs

```{r}
cfcs <- df_revisoes |>
  filter(ano == 2024) |>
  select(uf, cfcs) |>
  mutate(regiao = get_region(uf), .before = 1) |>
  arrange(desc(regiao))
```

Devido ao fato da avaliação dos CFCs ser efetuada a partir de um único critério de avaliação, como indica a @tbl-cri-cfcs, as notas para cada estado estão ilustradas na @tbl-cfcs em pontuações qualitativas:

::: panel-tabset
### Tabela

```{r}
#| tbl-cap: Resultados da categoria "CFCs"
#| label: tbl-cfcs

cfcs |>
  mutate(
    nota = cfcs,
    cfcs =
       case_match(
        cfcs,
        10.0 ~ "Melhor",
        6.7 ~ "Intermediário",
        3.3 ~ "Inicial",
        0 ~ "Ausente"
      )
  ) |>
  rename(
    `Região` = regiao,
    UF = uf,
    `Lista de CFCs` = cfcs,
    `Nota Média` = nota
  ) |> 
  make_reactable(
    columns = list(
      `Nota Média` = colDef(
        style = continuous_bg_func,
        format = colFormat(locales = "de-DE", digits = 1)
      ),
      `Lista de CFCs` = colDef(style = quali_bg_func)
    )
  )
```

### Mapa

```{r}
#| fig-cap: Resultados da categoria "CFCs"
#| label: fig-map-cfcs

cfcs_map <- 
  cfcs |> 
  rename(nota_final = cfcs) |> 
  map_preproc()

cfcs_map |> 
  make_leaflet()
```
:::

<!-- Observa-se na @fig-map-cfcs a predominância do desempenho intermediário nestes dados. Há também uma clara ausência de DETRANs com **Prática Inicial**: -->

### Infrações

```{r}
infracoes <- df_revisoes |>
  filter(ano == 2024) |>
  select(uf, starts_with("infracoes")) |>
  mutate(regiao = get_region(uf), .before = 1) |>
  mutate(nota_final = round(rowMeans(across(
    starts_with("infracoes")
  )), 2)) |>
  arrange(desc(regiao))
```

A @tbl-infracoes contém os resultados das consultas de dados sobre infrações, também utilizando de classificações qualitativas relacionadas a uma nota média final. Neste caso, a desagregação considerou a divisão por artigo de infração, grupo de infração (circulação, estacionamento, etc.), natureza (grave, leve, etc.), instrumento de autuação, local de autuação, faixa etária do condutor infrator, sexo do condutor infrator, por responsável (condutor ou proprietário) e exercício de atividade remunerada ou não do infrator.

::: panel-tabset
### Tabela

```{r}
#| tbl-cap: Resultados da categoria "Infrações"
#| label: tbl-infracoes

infracoes |>
  mutate(across(
    starts_with("infracoes"),
    ~ case_match(
      .x,
      10.0 ~ "Melhor",
      6.7 ~ "Intermediário",
      3.3 ~ "Inicial",
      0 ~ "Ausente"
    )
  )) |>
  rename(
    `Região` = regiao,
    UF = uf,
    Periodicidade = infracoes_period,
    Interatividade = infracoes_inter,
    `Nível de desagregação` = infracoes_desagreg,
    `Nota Média` = nota_final
  ) |> 
  make_reactable(
    columns = list(
      `Nota Média` = colDef(
        style = continuous_bg_func,
        format = colFormat(locales = "de-DE", digits = 1)
      ),
      Periodicidade = colDef(style = quali_bg_func),
      Interatividade = colDef(style = quali_bg_func),
      `Nível de desagregação` = colDef(style = quali_bg_func)
    )
  )
```

<!-- A tabela anterior e a @fig-map-infracoes demonstram uma escassez de dados especificamente nos DETRANs da Região Norte e em alguns DETRANs do Nordeste. -->

### Mapa

```{r}
#| fig-cap: Resultados da categoria "Infrações"
#| label: fig-map-infracoes

infracoes_map <- 
  infracoes |> 
  map_preproc()

infracoes_map |> 
  make_leaflet()
```
:::

### Sinistros de Trânsito

```{r}
sinistros <- df_revisoes |>
  filter(ano == 2024) |>
  select(uf, starts_with("sinistros")) |>
  mutate(regiao = get_region(uf), .before = 1) |>
  mutate(nota_final = round(rowMeans(across(
    starts_with("sinistros")
  )), 2)) |>
  arrange(desc(regiao))
```

Os sinistros de trânsito são avaliados também de acordo com a @tbl-criterios, com suas classificações finais e notas médias apresentadas na @tbl-sinistros. Entende-se como variáveis para a desagregação desta categoria a gravidade do sinistro (fatal ou não), período (dia ou noite), área (urbana ou rural), natureza (atropelamento, choque, etc.), dias da semana, horário, sexo da vítima e/ou do condutor, faixa etária da vítima e/ou do condutor, tipo da vítima e/ou do condutor (ciclista, pedestre, etc.), categoria do condutor (habilitado, inabilitado, etc.), tempo de habilitação do condutor e espécie do veículo envolvido (automóvel, bicicleta, etc.).

::: panel-tabset
### Tabela

```{r}
#| tbl-cap: Resultados da categoria "Sinistros"
#| label: tbl-sinistros

sinistros |>
  mutate(across(
    starts_with("sinistros"),
    ~ case_match(
      .x,
      10.0 ~ "Melhor",
      6.7 ~ "Intermediário",
      3.3 ~ "Inicial",
      0 ~ "Ausente"
    )
  )) |>
  rename(
    `Região` = regiao,
    UF = uf,
    Periodicidade = sinistros_period,
    Interatividade = sinistros_inter,
    `Nível de desagregação` = sinistros_desagreg,
    `Nota Média` = nota_final
  ) |> 
  make_reactable(
    columns = list(
      `Nota Média` = colDef(
        style = continuous_bg_func,
        format = colFormat(locales = "de-DE", digits = 1)
      ),
      Periodicidade = colDef(style = quali_bg_func),
      Interatividade = colDef(style = quali_bg_func),
      `Nível de desagregação` = colDef(style = quali_bg_func)
    )
  )
```

<!-- A @fig-map-sinistros demonstra uma carência de informações de sinistros em uma grande parcela dos departamentos, sendo a categoria de dado estatístico com maior déficit nos portais de acesso à informação. -->

### Mapa

```{r}
#| fig-cap: Resultados da categoria "Sinistros"
#| label: fig-map-sinistros

sinistros_map <- 
  sinistros |> 
  map_preproc()

sinistros_map |> 
  make_leaflet()
```
:::

### Educação para o Trânsito

As consultas para informações de educação para o trânsito estão apresentadas na @tbl-educ, com pontações atribuídas conforme os critérios de avaliação da @tbl-cri-educ.

```{r}
educacao <- df_revisoes |>
  filter(ano == 2024) |>
  select(uf, starts_with("educ")) |>
  mutate(regiao = get_region(uf), .before = 1) |>
  mutate(nota_final = round(rowMeans(across(
    starts_with("educ")
  )), 2)) |>
  arrange(desc(regiao))
```

::: panel-tabset
### Tabela

```{r}
#| tbl-cap: Resultados da categoria "Educação para o Trânsito"
#| label: tbl-educ

educacao |> 
    mutate(across(
    starts_with("educ"),
    ~ case_match(
      .x,
      10.0 ~ "Melhor",
      6.7 ~ "Intermediário",
      3.3 ~ "Inicial",
      0 ~ "Ausente"
    )
  )) |>
  rename(
    `Região` = regiao,
    UF = uf,
    `Conteúdos didáticos` = educ_conteudos,
    `Divulgação de atividades` = educ_divulgacao,
    `Nota Média` = nota_final
  ) |> 
  make_reactable(
    columns = list(
      `Nota Média` = colDef(
        style = continuous_bg_func,
        format = colFormat(locales = "de-DE", digits = 1)
      ),
      `Conteúdos didáticos` = colDef(style = quali_bg_func),
      `Divulgação de atividades` = colDef(style = quali_bg_func)
    )
  )
```

<!-- A @fig-map-educ demonstra como a maioria dos departamentos estaduais possui disponibilidade adequada de conteúdos didáticos e atividades educativas para o trânsito. -->

### Mapa

```{r}
#| fig-cap: Resultados da categoria "Educação para o Trânsito"
#| label: fig-map-educ

educacao_map <-
  educacao |>
  map_preproc()

educacao_map |> 
  make_leaflet()
```
:::

### Atendimento ao público

```{r}
atendimento <- df_revisoes |>
  filter(ano == 2024) |>
  select(uf, starts_with("atendimento")) |>
  mutate(regiao = get_region(uf), .before = 1) |>
  mutate(nota_final = round(rowMeans(across(
    starts_with("atendimento")
  )), 2)) |>
  arrange(desc(regiao))
```

Os resultados das consultas sobre o atendimento ao público estão apresentados na @tbl-atendimento. É notável a ausência de estatísticas de atendimento para a maioria dos DETRANs.

::: panel-tabset
### Tabela

```{r}
#| tbl-cap: Resultados da categoria "Atendimento ao Público"
#| label: tbl-atendimento

atendimento |>
  mutate(
    atendimento_canais =
      case_match(
        atendimento_canais,
        10.0 ~ "Melhor",
        6.7 ~ "Intermediário",
        3.3 ~ "Inicial",
        0 ~ "Ausente"
      ),
    atendimento_estatistica =
      case_match(
        atendimento_estatistica,
        10.0 ~ "Melhor",
        6.7 ~ "Intermediário",
        3.3 ~ "Inicial",
        0 ~ "Ausente"
      )
  ) |>
  rename(
    `Região` = regiao,
    UF = uf,
    `Estatísticas de atendimento` = atendimento_estatistica,
    `Canais de atendimento` = atendimento_canais,
    `Nota Média` = nota_final
  ) |>
  make_reactable(
    columns = list(
      `Nota Média` = colDef(
        style = continuous_bg_func,
        format = colFormat(locales = "de-DE", digits = 1)
      ),
      `Estatísticas de atendimento` = colDef(style = quali_bg_func),
      `Canais de atendimento` = colDef(style = quali_bg_func)
    )
  )
```

<!-- A @fig-map-atend apresenta as notas médias para todos os estados em relação ao atendimento ao público. -->

### Mapa

```{r}
#| fig-cap: Resultados da categoria "Atendimento ao Público"
#| label: fig-map-atend

atendimento_map <- 
  atendimento |> 
  map_preproc()

atendimento_map |> 
  make_leaflet()
```
:::

### Evolução dos Resultados

As pontuações finais calculadas para a avaliação das informações disponibilizadas nos portais dos DETRANs de 2024 permite não apenas identificar os departamentos de melhor performance conforme os critérios de avaliação estabelecidos, mas também averiguar como progrediram ou regrediram em relação à avaliação de 2020, como visto na @fig-dumbbell.

<!-- Reduzir o tamanho do texto no gráfico; aumentar a altura do gráfico; a palavra "centro-oeste" ficou cortada -->

<!-- R.: Feito -->

```{r}
#| fig-cap: Evolução dos resultados finais entre 2020 e 2024
#| label: fig-dumbbell
#| fig-height: 5

dumbbell <- df_revisoes |>
  select(uf, nota_final, ano) |>
  mutate(regiao = get_region(uf)) |>
  pivot_wider(names_from = ano,
              names_prefix = "ano_",
              values_from = nota_final) |>
  mutate(uf = reorder(uf, ano_2024),
         color = if_else(ano_2020 < ano_2024, "up", "down"))

dumbbell_plot <-
  ggplot(dumbbell) +
  geom_segment_interactive(
    aes(
      y = uf,
      yend = uf,
      x = ano_2020,
      xend = ano_2024,
      color = color,
      tooltip = sprintf(
        "Estado: %s<br>Nota de 2024: %.2f<br>Nota de 2020: %.2f",
        uf,
        ano_2024,
        ano_2020
      ),
      data_id = uf
    ),
    arrow = arrow(
      length = unit(.1, "inches"),
      type = "closed",
      angle = 20
    ),
    hover_nearest = T,
    show.legend = F,
    linewidth = 0.75
  ) +
  scale_color_manual(values = c(onsv_palette$red, onsv_palette$green)) +
  scale_x_continuous(limits = c(0, 10)) +
  scale_y_discrete(position = "left",) +
  labs(x = NULL, y = NULL, color = NULL) +
  theme_bw() +
  facet_grid(vars(regiao),
             scales = "free_y",
             space = "free_y",
             switch = "y") +
  theme(strip.text = element_text(size = 7),
        axis.text.y = element_text(size = 8))

girafe(ggobj = dumbbell_plot)
```

<!-- ```{r} -->
<!-- #| height: 7 -->

<!-- make_dumbbell <- function(reg) { -->
<!--   if (reg == "Sul") { -->
<!--     df_revisoes |> -->
<!--     select(uf, nota_final, ano) |> -->
<!--     mutate(regiao = get_region(uf)) |> -->
<!--     filter(regiao == reg) |>  -->
<!--     pivot_wider(names_from = ano, -->
<!--                 names_prefix = "ano_", -->
<!--                 values_from = nota_final) |> -->
<!--     mutate(uf = reorder(uf, ano_2024), -->
<!--            color = factor(if_else(ano_2020 < ano_2024, "up", "down"))) |>  -->
<!--     plot_ly() |> -->
<!--     add_markers( -->
<!--       ~ ano_2024, -->
<!--       ~ uf, -->
<!--       showlegend = F, -->
<!--       marker = list(color = tbl_green, symbol = "triangle-right") -->
<!--     ) |> -->
<!--     add_segments( -->
<!--       x = ~ ano_2020, -->
<!--       xend = ~ ano_2024, -->
<!--       y = ~ uf, -->
<!--       yend = ~ uf, -->
<!--       line = list(color = tbl_green), -->
<!--       showlegend = F -->
<!--     ) -->
<!--   }  -->
<!--   else { -->
<!--     df_revisoes |> -->
<!--     select(uf, nota_final, ano) |> -->
<!--     mutate(regiao = get_region(uf)) |> -->
<!--     filter(regiao == reg) |>  -->
<!--     pivot_wider(names_from = ano, -->
<!--                 names_prefix = "ano_", -->
<!--                 values_from = nota_final) |> -->
<!--     mutate(uf = reorder(uf, ano_2024), -->
<!--            color = factor(if_else(ano_2020 < ano_2024, "up", "down"))) |>  -->
<!--     plot_ly() |> -->
<!--     add_markers( -->
<!--       ~ ano_2024, -->
<!--       ~ uf, -->
<!--       showlegend = F, -->
<!--       color = ~ color, -->
<!--       colors = rev(c(tbl_green, tbl_red)), -->
<!--       symbol = ~ color, -->
<!--       symbols = rev(c("triangle-right", "triangle-left")) -->
<!--     ) |> -->
<!--     add_segments( -->
<!--       x = ~ ano_2020, -->
<!--       xend = ~ ano_2024, -->
<!--       y = ~ uf, -->
<!--       yend = ~ uf, -->
<!--       color = ~ color, -->
<!--       showlegend = F, -->
<!--       colors = c(tbl_green, tbl_red) -->
<!--     ) -->
<!--   } -->
<!-- } -->

<!-- norte <- make_dumbbell("Norte") -->
<!-- nordeste <- make_dumbbell("Nordeste") -->
<!-- centro <- make_dumbbell("Centro-Oeste") -->
<!-- sudeste <- make_dumbbell("Sudeste") -->
<!-- sul <- make_dumbbell("Sul") -->

<!-- subplot( -->
<!--   norte, -->
<!--   nordeste, -->
<!--   centro, -->
<!--   sudeste, -->
<!--   sul, -->
<!--   nrows = 5, -->
<!--   shareX = T, -->
<!--   shareY = T, -->
<!--   margin = 0.02, -->
<!--   heights = c(7/27, 9/27, 4/27, 4/27, 3/27) -->
<!-- ) -->
<!-- ``` -->

<!-- João, reveja o jeito que voce fez esse cálculo. Não tem como um valor finito e positivo apresentar uma redução de 150% -->

<!-- R.: Consertei o cálculo, mas agora a diferença é mais gritante -->

Em 2024, houve uma progressão majoritariamente positiva para os DETRANs. Considerando os departamentos que obtiveram notas maiores que 7, estão em destaque:

-   Sergipe - 9,61;

-   São Paulo - 8,98;

-   Rio Grande do Sul - 8,74;

-   Paraná - 7,85 e;

-   Rio de Janeiro - 7,7.

A @fig-map-compare apresenta um mapa de comparação das pontuações finais de todos estados.

<!-- ```{r} -->
<!-- #| fig-cap: Notas finais para DETRANs em 2020 e 2024 -->
<!-- #| label: fig-map-compare -->
<!-- #| fig-height: 2.5 -->

<!-- comparison_map <- -->
<!--   df_revisoes |>  -->
<!--   map_preproc()  -->

<!-- comparison_map |> -->
<!--   ggplot() + -->
<!--   geom_sf(aes(fill = fill)) +  -->
<!--   scale_fill_manual(values = pal) + -->
<!--   theme_void() + -->
<!--   facet_wrap(vars(ano)) + -->
<!--   labs(fill = "Nota Final") -->
<!-- ``` -->

```{r}
#| fig-cap: Notas finais para DETRANs em 2020 e 2024
#| label: fig-map-compare

comparison_map <-
  df_revisoes |> 
  map_preproc()

comp_map_2020 <- 
  comparison_map[comparison_map$ano == 2020, ] |> 
  make_leaflet()

comp_map_2024 <-
  comparison_map[comparison_map$ano == 2024, ] |> 
  make_leaflet()

sync(comp_map_2020, comp_map_2024, sync = F)
```

O resultado final de todas as consultas efetuadas, bem como os valores médios para cada categoria de dado acessado e suas notas finais podem ser observados na @tbl-final, em ordem descendente das pontuações atribuídas em 2024.

<!-- Aqui o calculo da porcentagem também ta errado. -->

<!-- R.: Consertei também, e agora a variação é colorida por positivo/negativo (discreto) invés de forma numérica pois ficava muito gritante a diferença devido a variação de BA -->

<!-- ```{r} -->

<!-- #| tbl-cap: Resultados finais das consultas para 2024 -->

<!-- #| label: tbl-final -->

<!-- variacao <- df_revisoes |> -->

<!--   select(uf, nota_final, ano) |> -->

<!--   pivot_wider(names_from = ano, -->

<!--               names_prefix = "ano", -->

<!--               values_from = nota_final) |> -->

<!--   summarise( -->

<!--     .by = uf, -->

<!--     ano2020 = mean(ano2020), -->

<!--     ano2024 = mean(ano2024) -->

<!--   ) |> -->

<!--   mutate(var = (ano2024-ano2020)/ano2020) |> -->

<!--   arrange(desc(var)) |> -->

<!--   select(uf, ano2020, var) -->

<!-- consulta_pre |> -->

<!--   mutate(nota_final = rowMeans(across(frota:cfcs))) |> -->

<!--   arrange(desc(nota_final)) |> -->

<!--   select(-regiao) |> -->

<!--   left_join(variacao, by = "uf") |> -->

<!--   relocate(nota_final, .after = ano2020) |>  -->

<!--   gt(rowname_col = "uf") |> -->

<!--   fmt_number(dec_mark = ",", sep_mark = ".") |> -->

<!--   fmt_percent(var, dec_mark = ",", sep_mark = ".") |> -->

<!--   cols_label( -->

<!--     frota = "Frota veicular", -->

<!--     condutores = "Condutores habilitados", -->

<!--     infracoes = "Infrações", -->

<!--     sinistros = "Sinistros", -->

<!--     atendimento = "Atendimento ao público", -->

<!--     educ = "Educação para o trânsito", -->

<!--     cfcs = "CFCs", -->

<!--     nota_final = "Nota 2024", -->

<!--     var = "Variação", -->

<!--     ano2020 = "Nota 2020" -->

<!--   ) |> -->

<!--   cols_align(align = "center") |> -->

<!--   tab_options( -->

<!--     column_labels.background.color = onsv_palette$blue, -->

<!--     column_labels.font.weight = "bold" -->

<!--   ) |> -->

<!--   tab_style(style = cell_text(color = onsv_palette$blue), -->

<!--             locations = cells_title()) |> -->

<!--   data_color(ano2020:nota_final, method = "numeric", palette = pal) |>  -->

<!--   data_color(columns = c(var), -->

<!--              colors = col_bin( -->

<!--                bins = c(-Inf, 0, Inf), -->

<!--                palette = c(tbl_red, tbl_green) -->

<!--              )) -->

<!-- ``` -->

```{r}
#| tbl-cap: Resultados finais das consultas para 2024
#| label: tbl-final

coldef1 <- 
  colDef(
    format = colFormat(locales = "de-DE", digits = 1)
  )

coldef2 <- 
  colDef(
    style = continuous_bg_func,
    format = colFormat(locales = "de-DE", digits = 1)
  )

variacao <- df_revisoes |>
  select(uf, nota_final, ano) |>
  pivot_wider(names_from = ano,
              names_prefix = "ano",
              values_from = nota_final) |>
  summarise(
    .by = uf,
    ano2020 = mean(ano2020),
    ano2024 = mean(ano2024)
  ) |>
  select(uf, ano2020)

consulta_pre |>
  mutate(nota_final = rowMeans(across(frota:cfcs))) |>
  arrange(desc(nota_final)) |>
  select(-regiao) |>
  left_join(variacao, by = "uf") |>
  relocate(nota_final, .after = ano2020) |> 
  rename_with(.fn = str_to_title) |> 
  rename(
    UF = Uf,
    `Infrações` = Infracoes,
    `Educação` = Educ,
    CFCs = Cfcs,
    `2020` = Ano2020,
    `2024` = Nota_final
  ) |> 
  make_reactable(
    columns = list(
      Frota = coldef1,
      Condutores = coldef1,
      `Infrações` = coldef1,
      Sinistros = coldef1,
      Atendimento = coldef1,
      `Educação` = coldef1,
      CFCs = coldef1,
      `2020` = coldef2,
      `2024` = coldef2
    )
  )

```

### Boas Práticas

Esta seção é dedicada a salientar alguns exemplos de boas práticas adotadas por DETRANs a fim de demonstrar alguns costumes que podem aperfeiçoar o desempenho dos portais em geral. A escolha das menções nesta seção foi promovida em relação às maiores notas encontradas no estudo.

#### Frota - Detran RJ

A @fig-rj demonstra um gerenciador de tabelas disponível no portal do Detran RJ, que apesar de não conter gráficos ou visualizações sobre os dados, possui um extenso intervalo temporal e um alto nível de desagregação das variáveis, fornecidos de forma interativa com filtros e tabelas dinâmicas.

::: {#fig-rj}
![](assets/detran_rj.png)

Gerenciador de Tabelas do Detran RJ.\
Fonte: https://www.detran.rj.gov.br/\_estatisticas.veiculos/index.asp
:::

#### Condutores - Detran RO

Na @fig-ro, o Detran RO disponibiliza os dados em um *dashboard*, ou relatório interativo, com filtros e gráficos dinâmicos para a visualização dos dados fornecidos, sendo implementado no *software* Power BI. O uso de programas de análise de dados para geração de relatórios interativos, como Tableau, Google Looker Studio e o anteriormente citado Microsoft Power BI, é uma prática muito recomendada aos departamentos em geral.

::: {#fig-ro}
![](assets/detran_ro.png)

Dashboard de dados de condutores habilitados do Detran RO\
Fonte: https://www.detran.ro.gov.br/post/43/2023/9/12/anuario-estatistico-condutores-habilitados/
:::

#### Infrações - Detran MS

Como anteriormente citado, uma boa prática para demonstração dos dados é a geração de dashboards através de programas de análise de dados. Na @fig-ms, o Detran MS incorpora em seu portal visualizações dinâmicas criadas em Tableau.

::: {#fig-ms}
![](assets/detran_ms.png)

Dashboard de infrações do Detran MS.\
Fonte: http://www.paineis.detran.ms.gov.br/Infracoes.html
:::

#### Sinistros - Detran SE

O Detran SE disponibiliza uma grande quantidade de níveis de desagregação, como visto na @fig-se-1.

::: {#fig-se-1}
![](assets/detran_se_1.png)

Página de estatísticas de sinistros do Detran SE.\
Fonte: https://www.detran.se.gov.br/?pg=estatistica/acidentes#gsc.tab=0
:::

Seus dados são apresentados em tabelas dinâmicas, com filtros e um extenso intervalo temporal, como apresenta a @fig-se-2.

::: {#fig-se-2}
![](assets/detran_se_2.png)

Exemplo de tabela dinâmica do Detran SE.\
Fonte: https://www.detran.se.gov.br/?pg=estatistica/acidentes/boat_001#gsc.tab=0
:::

#### Atendimento ao Público - Detran SP

Além de providenciar contato por telefone, e-mail e mensagem via WhatsApp, o serviço de atendimento do Detran SP oferece a possibilidade de registrar manifestações personalizadas pelo próprio portal (@fig-sp-1) e aplicativos para auxílio ao público (@fig-sp-2).

::: {#fig-sp-1}
![](assets/detran_sp_1.png)

Serviço de atendimento pelo portal do Detran SP.\
Fonte: https://www.detran.sp.gov.br/wps/portal/portaldetran/detran/canaisdecomunicacao
:::

::: {#fig-sp-2}
![](assets/detran_sp_2.png)

Aplicativos do portal do Detran SP.\
Fonte: https://www.detran.sp.gov.br/wps/portal/portaldetran/cidadao/appsdetran
:::

#### Educação para o Trânsito - Detran PR

A @fig-pr-educ apresenta o portal educativo do Detran PR, que dispõe de uma grande variedade de materiais e divulgações sobre a educação e conscientização para o trânsito disponíveis em diversos formatos digitais, como vídeos, cursos EaD, *podcasts*, entre outros.

::: {#fig-pr-educ}
![](assets/detran_pr_educ.png)

Portal de educação do Detran PR.\
Fonte: https://www.detraneduca.pr.gov.br/
:::

#### CFCs - Detran PR

O Detran PR também possui em seu portal tabelas interativas para a consulta de CFCs de forma dinâmica e eficiente, como demonstrado na @fig-pr-cfcs.

::: {#fig-pr-cfcs}
![](assets/detran_pr_cfcs.png)

Lista de CFCs/Instituições do Detran PR.\
Fonte: https://www.detran.pr.gov.br/Pagina/CFCInstituicoes-Cursos-de-Capacitacao-e-Especializados
:::

## Apêndice - Links acessados {.unnumbered}

Os *links* de acesso às informações consultadas estão disponíves na @tbl-links:

```{r}
#| tbl-cap: Tabela de links de acesso
#| label: tbl-links

load(here("data/links.rda"))

tbl_links |>
  rename(
    `Frota` = frota,
    Condutores = condutores,
    `Infrações` = infracoes,
    `Sinistros` = sinistros,
    `Estatísticas de atendimento` = estatistica_atend,
    `Canais de atendimento` = canais,
    `Educação para trânsito` = educ,
    CFCs = cfc
  ) |>
  pivot_longer(-UF) |>
  mutate(UF = get_state_names(UF)) |>
  group_by(UF) |>
  gt(rowname_col = "name") |>
  cols_label(value = "Links de acesso para informações") |>
  sub_missing(missing_text = "N.D.") |>
  tab_style(locations = cells_body(value),
            style = list(cell_text(size = "smaller"))) |>
  tab_options(
    column_labels.background.color = onsv_palette$blue,
    column_labels.font.weight = "bold"
  ) |>
  tab_style(style = cell_text(color = onsv_palette$blue),
            locations = cells_title()) |> 
  tab_style(style = cell_fill(color = "grey90"),
            locations = cells_row_groups())
```

## Referências {.unnumbered}
